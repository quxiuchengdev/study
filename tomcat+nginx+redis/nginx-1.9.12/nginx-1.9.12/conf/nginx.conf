
#使用的用户和组
#user  nobody;

#指定工作衍生进程数（一般等于CPU的总核数的两倍）
worker_processes  1;

#指定错误日志的存放路径，日志界别可选为[debug | info | notice | warn | error |crit ]
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#指定pid的存放路径
#pid        logs/nginx.pid;

#指定文件描述符数量
#worker_rlimit_nofile 51200;


events {

	#使用网络I/O模型，Linux推荐采用epoll模型，FreeBSD系统推荐采用kequeue模型
	#use epoll;

	#允许的连接数
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

	#设置使用的字符集，如果一个网站有多种使用的字符集，不要设置
	#charset gb2312;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    #sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    #keepalive_timeout  65;

	#开启gzip压缩
    #gzip  on;

    #设置客户端能够上传文件大小
    client_max_body_size 8m;


    # 负载均衡站点的名称为tomcat，可以自己取
    upstream tomcat {                   
   
        #ip_hash;                           
        # 可选，根据来源IP方式选择web服务器，省略的话按默认的轮循方式选择web服务器
        # web服务器的IP地址及tomcat发布端口
        server 127.0.0.1:8080 weight=1 max_fails=3 fail_timeout=3s;       
        server 127.0.0.1:8081 weight=1 max_fails=3 fail_timeout=3s;
        server 127.0.0.1:8082 weight=1 max_fails=3 fail_timeout=3s;

        #keepalive为连接开启缓存，并设置缓存连接的最大数量。
        keepalive 10;

    }
    server {
        # 站点侦听端口80
        listen       80;
        # 站点名称
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        #location ~ \.(html|js|css|png|gif)$ { 
        #    root C:\Users\quxiucheng\Desktop\012work; 
        #}

         location ~* ^.+\.(ico|gif|jpg|jpeg|png|html|htm|css|js|swf|wav)$ {
            expires 10d;
            proxy_pass http://tomcat;
            access_log off;
        }

        location / {
                root   html;
                index  index.html index.htm;
                proxy_pass http://tomcat;      # 负载均衡指向的发布服务tomcat
        }
       

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
